<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="sec-logic-equivalence" xmlns:xi="http://www.w3.org/2001/XInclude">
	<title>Equivalence</title>

	<objectives>
		<ul>
			<li>
				<p>
					Determine whether statements are logically equivalent.
				</p>
			</li>
			<li>
				<p>
					Use equivalent forms of the conditional interchangeably.
				</p>
			</li>
			<li>
				<p>
					Show statement are equivalent using truth tables.
				</p>
			</li>
		</ul>
	</objectives>
	<introduction>
		<p>
			Two statements are <term>logically equivalent</term> if they have the same truth value in every possible situation. In other words, no matter the circumstances, both statements are either true or false simultaneously.
		This relationship is often denoted <m>P\equiv Q</m> symbolically, and means that statements <m>P</m> and <m>Q</m> are interchangeable in logical arguments.
		</p>
	</introduction>
	<subsection xml:id="subsec-logic-contrapositive">
		<title>Logical Equivalence and the Conditional</title>
		<p>
			It may seem counterintuitive at first, but the conditional statement <q>if p, then q</q> (<m>p \to q</m>) can be written using negation and an OR statement. To be precise,
		</p>
		<fact>
			<statement>
				<p>
					<me>
						p \to q \equiv \neg p \lor q.
					</me>
				</p>
			</statement>
		</fact>
		<p>
			To understand this intuitively, consider the following example. Keep in mind that symbolic logic cannot represent the English language example, and we may need to change verb tenses or otherwise rephrase to make equivalent forms clear.
			(For a review of the conditional, re-read <xref text="global" ref="subsubsec-conditional-truth-table"/>.)
		</p>
		<example>
			<p>
				You are told <q>If the cookies contains nuts, then Alex cannot eat it</q>. With some thought, you should see that this is equivalent to saying <q>Either the cake does not contain nuts, or Alex cannot eat it</q>.
			</p>
		</example>
		<p>
			While verbal example such as the one above illustrate our intuitive understanding that two statements are equivalent, equivalence is definitively demonstrated with a truth table. One advantage of a truth table is that the result can be shown independently of the specific details of a problem.
		</p>
		<example>
			<statement>
				<p>
					Use a truth table to show that <m>p \to q \equiv \neg p \lor q</m>.
				</p>
			</statement>
			<solution>
				<p>
					We build a truth table as shown in <xref ref="sec-logic-truth-tables"/>. Begin by adding the standard columns for <m>p</m> and <m>q</m>, then continue by adding a third column for <m>\neg p</m> using column 1. Next, compute <m>\neg p \lor q</m> using columns 3 and 2. We end by adding a column for <m>p \to q</m> using columns 1 and 2.
				</p>
				<tabular halign="center" top="minor" left="minor" right="minor" bottom="minor">
					<row header="yes">
						<cell><m>p</m></cell>
						<cell><m>q</m></cell>
						<cell><m>\neg p</m></cell>
						<cell><m>\neg p \lor q</m></cell>
						<cell><m>p\rightarrow q</m></cell>
					</row>
					<row>
						<cell>T</cell>
						<cell>T</cell>
						<cell>F</cell>
						<cell>T</cell>
						<cell>T</cell>
					</row>
					<row>
						<cell>T</cell>
						<cell>F</cell>
						<cell>F</cell>
						<cell>F</cell>
						<cell>F</cell>
					</row>
					<row>
						<cell>F</cell>
						<cell>T</cell>
						<cell>T</cell>
						<cell>T</cell>
						<cell>T</cell>
					</row>
					<row>
						<cell>F</cell>
						<cell>F</cell>
						<cell>T</cell>
						<cell>T</cell>
						<cell>T</cell>
					</row>
					</tabular>
					<p>
						Observe that the truth values in columns 4 and 5 match exactly. This demonstrates the equivalence of <m>p \to q</m> with <m>\neg p \lor q</m>.
					</p>
			</solution>
		</example>
		<p>
			The negation of a conditional also has an equivalent form written using AND. That is,
		</p>
		<fact>
			<statement>
				<p>
					<me>
						\neg(p \to q) \equiv p \land \neg{q}
					</me>
				</p>
			</statement>
		</fact>
		<p>
			Can you demonstrate this equivalence using a truth table? Doing so is very similar to the previous example. The intuitive sense of the above logical statement is illustrated by the following example.
		</p>
		<example>
			<statement>
				<p>
					Consider the statement <q>If you park here, then you will get a ticket.</q> What set of conditions would prove this statement false?
				</p>
				<ol marker="a">
					<li>
						<p>
							You don't park here and you get a ticket.
						</p>
					</li>
					<li>
						<p>
							You don't park here and you don't get a ticket.
						</p>
					</li>
					<li>
						<p>
							You park here and you don't get a ticket.
						</p>
					</li>
				</ol>
			</statement>
			<solution>
				<p>
					The first two statements are irrelevant because we don't know what will happen if you park somewhere else. The third statement, however contradicts the conditional statement <q>If you park here, then you will get a ticket</q> because you parked here but didn't get a ticket.
				</p>
				<p>
					This example demonstrates the general rule shown above that the negation of a conditional can be written as a conjunction: <q>It is not the case that if you park here, then you will get a ticket</q> is equivalent to <q>You park here and you do not get a ticket.</q>
				</p>
			</solution>
		</example>
	</subsection>
	<subsection>
		<title>The Contrapositive</title>
		<p>
			<em>And</em> and <em>or</em> statements can have their propositions reversed without affecting the truth value of the statement. If you need to buy beans <em>and</em> eggs, that's the same as buying eggs <em>and</em> beans. The order does matter for a conditional statement, however. Sometimes during an argument, an <em>if, then</em> statement will be reversed or combined with <em>not</em> in different ways. There are names for these combinations and it is helpful to look at which statements are equivalent to each other. Here are the names for the different combinations of <em>if, then</em> and <em>not</em> statements.
		</p>
		<!-- <table>
			<title>Related Statements</title>   
			<tabular>
				<row >
					<cell><term>Original Conditional</term></cell>
					<cell>if <m>p</m>, then <m>q</m></cell>
					<cell><m>p\to q</m></cell>
				</row>
				<row>
					<cell><term>Converse</term></cell>
					<cell>if <m>q</m>, then <m>p</m></cell>
					<cell><m>q\to p</m></cell>
				</row>
			</tabular>
		</table> -->
		<p>
			<ul>
				<li>
					<p>
						<term> Original Conditional</term>: <m>p\to q</m>
					</p>
				</li>
				<li>
					<p>
						<term>Converse</term>: <m>q\to p</m>
					</p>
				</li>
				<li>
					<p>
						<term>Inverse</term>: <m>\neg p\to \neg q</m>
					</p>
				</li>
				<li>
					<p>
						<term>Contrapositive</term>: <m>\neg q\to \neg p</m>
					</p>
				</li>
			</ul>
		</p>
		<p>
			The meaning of each of these forms is examined in the following example.
		</p>
		<example>
			<statement>
			<p>
				Assume this original conditional statement is true: <q>If you take your dog to the park, they will be happy.</q> Write the converse, inverse and contrapositive of the original statement and determine which are equivalent to each other.
			</p>
		</statement>
		<solution>
			<p>
				<ul>
					<li>
						<p>
							Original Statement: <m>p</m> is, <q>You take your dog to the park,</q> and <q>q</q> is, <q>Your dog is happy.</q>
						</p>
					</li>
					<li>
						<p>
							Converse: <q>If your dog is happy, then you took them to the park.</q> Notice we needed to change the tense to keep the order of events the same. If your dog is happy does that mean you took them to the park? Not necessarily, because there are other reasons your dog could be happy like getting a treat or taking a walk. So, this is false.
						</p>
					</li>
					<li>
						<p>
							Inverse: <q>If you don't take your dog to the park, they will not be happy.</q> This is similar to the converse. Even if you don't take your dog to the park, they could be unhappy for another reason. This is false. The inverse is logically equivalent to the converse.
						</p>
					</li>
					<li>
						<p>
							Contrapositive: <q>If your dog is not happy, then you did not take them to the park.</q> Since the original statement is true, then this is also true. Taking your dog to the park would result in them being happy, so if they are not happy we can say that they did not go to the park. The contrapositive is logically equivalent to the original statement.
						</p>
					</li>
				</ul>
			</p>
		</solution>
		</example>
		<p>
			The above example provides intuition for the following fact.
		</p>
		<fact>
			<title>Logical Equivalence of the Contrapositive</title>
			<statement>
				<p>
					A <term>conditional</term> statement and its <term>contrapositive</term> are equivalent. The <term>converse</term> and <term>inverse</term> of a conditional statement are also equivalent. That is,
					<md>
						<mrow>p \to q \equiv\amp \neg q\to \neg p </mrow>
						<mrow>q \to p \equiv\amp \neg p\to \neq q</mrow>
					</md>
					However, <m>p\to q</m> is NOT equivalent to <m>q\to p</m>.
				</p>
			</statement>
		</fact>
		<example>
			<statement>
				<p>
					Use a truth table to demonstrate the equivalence of a conditional statement and its contrapositive. That is, verify that
					<me> p \to q \equiv \neg q\to \neg p. </me>
				</p>
			</statement>
			<solution>
				<p>
					Here is a truth table with a column for each piece of the statement.
				</p>
				<tabular halign="center" top="minor" left="minor" right="minor" bottom="minor">
					<row header="yes">
						<cell><m>p</m></cell>
						<cell><m>q</m></cell>
						<cell><m>p \to q</m></cell>
						<cell><m>\neg q</m></cell>
						<cell><m>\neg p</m></cell>
						<cell><m>\neg q\to \neg p</m></cell>
					</row>
					<row>
						<cell>T</cell>
						<cell>T</cell>
						<cell>T</cell>
						<cell>F</cell>
						<cell>F</cell>
						<cell>T</cell>
					</row>
					<row>
						<cell>T</cell>
						<cell>F</cell>
						<cell>F</cell>
						<cell>T</cell>
						<cell>F</cell>
						<cell>F</cell>
					</row>
					<row>
						<cell>F</cell>
						<cell>T</cell>
						<cell>T</cell>
						<cell>F</cell>
						<cell>T</cell>
						<cell>T</cell>
					</row>
					<row>
						<cell>F</cell>
						<cell>F</cell>
						<cell>T</cell>
						<cell>T</cell>
						<cell>T</cell>
						<cell>T</cell>
					</row>
				</tabular>
				<p>
					Note that columns three and five show the same truth values. This demonstrates the equivalence of the conditional with its contrapositive.
				</p>
			</solution>
		</example>
	</subsection>
	<subsection xml:id="subsec-logic-biconditional">
		<title>The Biconditional</title>
		<p>
			In everyday life, we often have a stronger meaning in mind when we use a conditional statement. Consider the statement <q>If you submit your hours today, then you will be paid next Friday.</q> What the payroll representative really means is <q>If you submit your hours today, then you will be paid next Friday, and if you don't submit your hours today, then you won't be paid next Friday.</q> 
			In this example, the conditional statement if <m>t</m>, then <m>p</m> also includes the (unspoken!) inverse of the statement: if not <m>t</m>, then not <m>p</m>. A more compact way to express this statement is <q>You will be paid next Friday if and only if you submit your timesheet today.</q> A statement of this form is called a <term>biconditional</term>.
		</p>
		<sidebyside widths="60% 34%" margins="0% 0%" valign="middle">
			<p>
				Because a biconditional statement <m>p \leftrightarrow q</m> is equivalent to <m>(p \rightarrow q) \land (q \rightarrow p)</m>, we can think of it as a conditional statement combined with its converse: if <m>p</m>, then <m>q</m> and if <m>q</m>, then <m>p</m>. 
				The double-headed arrow shows that the conditional statement goes from left to right and from right to left. A biconditional is considered true as long as the antecedent and the consequent have the same truth value; that is, they are either both true or both false.
			</p>
			<tabular halign="center" top="minor" left="minor" right="minor" bottom="minor">
				<row header="yes">
					<cell><m>p</m></cell>
					<cell><m>q</m></cell>
					<cell><m>p \leftrightarrow q</m></cell>
				</row>
				<row>
					<cell>T</cell>
					<cell>T</cell>
					<cell>T</cell>
				</row>
				<row>
					<cell>T</cell>
					<cell>F</cell>
					<cell>F</cell>
				</row>
				<row>
					<cell>F</cell>
					<cell>T</cell>
					<cell>F</cell>
				</row>
				<row>
					<cell>F</cell>
					<cell>F</cell>
					<cell>F</cell>
				</row>
			</tabular>
		</sidebyside>
		<assemblage xml:id="assemblage-logic-biconditional">
			<title>Biconditional</title>
			<p>
				A biconditional is a logical conditional statement in which the antecedent and consequent are interchangeable.
			</p>
			<p>
				A biconditional is written as 
				<me>
					p \leftrightarrow q
				</me>
			and is read as <q><m>p</m> if and only if <m>q</m></q>.
			</p>
		</assemblage>
		<example>
			<statement>
			<p>
				Suppose this statement is true: <q>The garbage truck comes down my street if and only if it is Thursday morning.</q> Which of the following statements could be true?
				<ol marker="a">
					<li>
						<p>
							It is noon on Thursday and the garbage truck did not come down my street this morning.
						</p>
					</li>
					<li>
						<p>
							It is Monday, and the garbage truck is coming down my street.
						</p>
					</li>
					<li>
						<p>
							It is Wednesday at 11:59PM and the garbage truck did not come down my street today.
						</p>
					</li>
				</ol>
			</p>
			</statement>
			<solution>
			<p>
				<ol marker="a">
					<li>
						<p>
							This cannot be true. This is like the second row of the truth table; it is true that I just experienced Thursday morning, but it is false that the garbage truck came.
						</p>
					</li>
					<li>
						<p>
							This cannot be true. This is like the third row of the truth table; it is false that it is Thursday, but it is true that the garbage truck came.
						</p>
					</li>
					<li>
						<p>
							This could be true. This is like the fourth row of the truth table; it is false that it is Thursday, but it is also false that the garbage truck came, so everything worked out like it should.
						</p>
					</li>
				</ol>
			</p>
			</solution>
		</example>
		<p>
			As shown in the next example, the biconditional can be used in truth table problems as seen in <xref ref="sec-logic-truth-tables"/>. 
		</p>
		<example>
			<statement>
				<p>
					Create a truth table for the statement <m>(A\lor B)\leftrightarrow \neg C</m>.
				</p>
			</statement>
			<solution>
				<p>
					We start by listing all the possible truth value combinations for <m>A,\ B</m>, and <m>C</m>. After creating those three columns, we create a fourth column for the antecedent, <m>A \lor B</m>, whose values we find by temporarily ignoring the column for <m>C</m> and focusing on <m>A</m> and <m>B</m>.
					Next, we can create a column for the negation of <m>C</m>.  Finally, we find the truth values of <m>(A \lor B) \leftrightarrow \neg C</m>. Remember, a biconditional is true when the truth value of the two parts match, but it is false when the truth values do not match. The resulting table is shown below.
				</p>
				<tabular halign= "center" top="minor" left="minor" right="minor" bottom="minor">
					<row  header="yes">
						<cell><m>A</m></cell>
						<cell><m>B</m></cell>
						<cell><m>C</m></cell>
						<cell><m>(A \lor B)</m></cell>
						<cell><m>\neg C</m></cell>
						<cell><m>(A\lor B)\leftrightarrow \neg C</m></cell>
					</row>
					<row>
						<cell>T</cell>
						<cell>T</cell>
						<cell>T</cell>
						<cell>T</cell>
						<cell>F</cell>
						<cell>F</cell>
					</row>
					<row>
						<cell>T</cell>
						<cell>T</cell>
						<cell>F</cell>
						<cell>T</cell>
						<cell>T</cell>
						<cell>T</cell>
					</row>
					<row>
						<cell>T</cell>
						<cell>F</cell>
						<cell>T</cell>
						<cell>T</cell>
						<cell>F</cell>
						<cell>F</cell>
					</row>
					<row>
						<cell>T</cell>
						<cell>F</cell>
						<cell>F</cell>
						<cell>T</cell>
						<cell>T</cell>
						<cell>T</cell>
					</row>
					<row>
						<cell>F</cell>
						<cell>T</cell>
						<cell>T</cell>
						<cell>T</cell>
						<cell>F</cell>
						<cell>F</cell>
					</row>
					<row>
						<cell>F</cell>
						<cell>T</cell>
						<cell>F</cell>
						<cell>T</cell>
						<cell>T</cell>
						<cell>T</cell>
					</row>
					<row>
						<cell>F</cell>
						<cell>F</cell>
						<cell>T</cell>
						<cell>F</cell>
						<cell>F</cell>
						<cell>T</cell>
					</row>
					<row>
						<cell>F</cell>
						<cell>F</cell>
						<cell>F</cell>
						<cell>F</cell>
						<cell>T</cell>
						<cell>F</cell>
					</row>
				</tabular>
			</solution>
		</example>
	</subsection>
</section>